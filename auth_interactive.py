import asyncio
from telethon import TelegramClient
from telethon.sessions import StringSession

async def auth():
    print("üîê –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Telegram...")
    
    # –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
    api_id = 25874482
    api_hash = "5463e25bfff2c0f8b1a90041f162bb0f"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = TelegramClient('userbot', api_id, api_hash)
    
    try:
        print("üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
        await client.start()
        
        if not await client.is_user_authorized():
            print("ÔøΩÔøΩ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: +79001234567):")
            phone = input("–¢–µ–ª–µ—Ñ–æ–Ω: ")
            
            print("üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
            await client.send_code_request(phone)
            
            print("üì± –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ Telegram:")
            code = input("–ö–æ–¥: ")
            
            try:
                await client.sign_in(phone, code)
                print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
            except Exception as e:
                if "2FA" in str(e) or "password" in str(e).lower():
                    print("üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
                    password = input("–ü–∞—Ä–æ–ª—å: ")
                    await client.sign_in(password=password)
                    print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å 2FA!")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
                    return False
        else:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        print(f"ÔøΩÔøΩ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name} (@{me.username})")
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏
        session_string = StringSession.save(client.session)
        print(f"üîë –°—Ç—Ä–æ–∫–∞ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—É—á–µ–Ω–∞ (–¥–ª–∏–Ω–∞: {len(session_string)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open('session_string.txt', 'w') as f:
            f.write(session_string)
        print("üíæ –°—Ç—Ä–æ–∫–∞ —Å–µ—Å—Å–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ session_string.txt")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        await client.disconnect()

if __name__ == "__main__":
    asyncio.run(auth())
