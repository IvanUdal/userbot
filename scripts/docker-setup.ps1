# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –¥–ª—è Telegram Userbot –Ω–∞ Windows

param(
    [switch]$Force
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ü–≤–µ—Ç–æ–º
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    
    $Colors = @{
        "Red" = "Red"
        "Green" = "Green" 
        "Yellow" = "Yellow"
        "Blue" = "Cyan"
        "White" = "White"
    }
    
    Write-Host $Message -ForegroundColor $Colors[$Color]
}

function Write-Info {
    param([string]$Message)
    Write-ColorOutput "[INFO] $Message" "Blue"
}

function Write-Success {
    param([string]$Message)
    Write-ColorOutput "[SUCCESS] $Message" "Green"
}

function Write-Warning {
    param([string]$Message)
    Write-ColorOutput "[WARNING] $Message" "Yellow"
}

function Write-Error {
    param([string]$Message)
    Write-ColorOutput "[ERROR] $Message" "Red"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
function Test-Docker {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
    
    try {
        $dockerVersion = docker --version
        Write-Success "Docker –Ω–∞–π–¥–µ–Ω: $dockerVersion"
    }
    catch {
        Write-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    }
    
    try {
        $composeVersion = docker-compose --version
        Write-Success "Docker Compose –Ω–∞–π–¥–µ–Ω: $composeVersion"
    }
    catch {
        Write-Error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
function New-Directories {
    Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    $directories = @(
        "data",
        "logs", 
        "sessions",
        "backups",
        "monitoring",
        "notebooks",
        "grafana",
        "prometheus"
    )
    
    foreach ($dir in $directories) {
        if (!(Test-Path $dir)) {
            New-Item -ItemType Directory -Path $dir -Force | Out-Null
            Write-Success "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir"
        }
        else {
            Write-Info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $dir"
        }
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞
function Set-EnvFile {
    Write-Info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞..."
    
    if (!(Test-Path ".env")) {
        if (Test-Path "combined_config_example.env") {
            Copy-Item "combined_config_example.env" ".env"
            Write-Success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        }
        else {
            Write-Warning "–§–∞–π–ª combined_config_example.env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ .env –≤—Ä—É—á–Ω—É—é."
        }
    }
    else {
        Write-Info ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    if (Test-Path ".env") {
        $envContent = Get-Content ".env"
        if ($envContent -notmatch "API_ID=" -or $envContent -notmatch "API_HASH=") {
            Write-Warning "–í .env —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç API_ID –∏–ª–∏ API_HASH. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Ö –≤—Ä—É—á–Ω—É—é."
        }
    }
}

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
function Build-DockerImage {
    Write-Info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
    
    try {
        docker-compose build
        Write-Success "Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Docker –æ–±—Ä–∞–∑–∞"
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function Test-Config {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose..."
    
    try {
        docker-compose config | Out-Null
        Write-Success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose"
        exit 1
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
function New-ManagementScripts {
    Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é scripts –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!(Test-Path "scripts")) {
        New-Item -ItemType Directory -Path "scripts" -Force | Out-Null
    }
    
    # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
    $startScript = @"
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram Userbot
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ Telegram Userbot..." -ForegroundColor Green
docker-compose up -d
Write-Host "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –õ–æ–≥–∏: docker-compose logs -f" -ForegroundColor Green
"@
    Set-Content "scripts/start.ps1" $startScript
    
    # –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    $stopScript = @"
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Telegram Userbot
Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram Userbot..." -ForegroundColor Yellow
docker-compose down
Write-Host "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
"@
    Set-Content "scripts/stop.ps1" $stopScript
    
    # –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    $restartScript = @"
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Telegram Userbot
Write-Host "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Telegram Userbot..." -ForegroundColor Blue
docker-compose restart
Write-Host "‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
"@
    Set-Content "scripts/restart.ps1" $restartScript
    
    # –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
    $logsScript = @"
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ Telegram Userbot
Write-Host "üìã –õ–æ–≥–∏ Telegram Userbot..." -ForegroundColor Cyan
docker-compose logs -f
"@
    Set-Content "scripts/logs.ps1" $logsScript
    
    # –°–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞
    $backupScript = @"
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
Write-Host "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..." -ForegroundColor Magenta
docker-compose -f docker-compose.prod.yml run backup
Write-Host "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ backups/" -ForegroundColor Green
"@
    Set-Content "scripts/backup.ps1" $backupScript
    
    Write-Success "–°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ scripts/"
}

# –°–æ–∑–¥–∞–Ω–∏–µ README –¥–ª—è Docker
function New-DockerReadme {
    Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    
    $readmeContent = @"
# üê≥ Docker - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

## üöÄ –ó–∞–ø—É—Å–∫

```powershell
# –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ
.\scripts\start.ps1

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
.\scripts\logs.ps1

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞
.\scripts\stop.ps1

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
.\scripts\restart.ps1

# –ë—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö
.\scripts\backup.ps1
```

## üìã –ö–æ–º–∞–Ω–¥—ã Docker

```powershell
# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
docker-compose build

# –ó–∞–ø—É—Å–∫
docker-compose up -d

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞
docker-compose down

# –õ–æ–≥–∏
docker-compose logs -f

# –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker-compose exec telegram-userbot bash
```

## üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

```powershell
# –ó–∞–ø—É—Å–∫ —Å –æ—Ç–ª–∞–¥–∫–æ–π
docker-compose -f docker-compose.dev.yml up

# Jupyter Notebook (–∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö)
# –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8888

# Grafana (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)
# –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000
# –õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: admin

# PostgreSQL (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
# –•–æ—Å—Ç: localhost, –ü–æ—Ä—Ç: 5432
# –ë–∞–∑–∞: userbot, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: userbot, –ü–∞—Ä–æ–ª—å: userbot_password
```

## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

- **Prometheus**: http://localhost:9090
- **Grafana**: http://localhost:3000
- **Jupyter**: http://localhost:8888

## ‚ö†Ô∏è –í–∞–∂–Ω–æ

1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
2. –£–∫–∞–∂–∏—Ç–µ API_ID –∏ API_HASH
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ ID –≥—Ä—É–ø–ø
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–∞–º
"@
    
    Set-Content "DOCKER_README.md" $readmeContent
    Write-Success "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-Host "==========================================" -ForegroundColor Cyan
    Write-Host "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –¥–ª—è Telegram Userbot" -ForegroundColor Cyan
    Write-Host "==========================================" -ForegroundColor Cyan
    
    Test-Docker
    New-Directories
    Set-EnvFile
    Build-DockerImage
    Test-Config
    New-ManagementScripts
    New-DockerReadme
    
    Write-Host ""
    Write-Host "==========================================" -ForegroundColor Green
    Write-Success "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    Write-Host "==========================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor White
    Write-Host "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª (API_ID, API_HASH, ID –≥—Ä—É–ø–ø)" -ForegroundColor White
    Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: .\scripts\start.ps1" -ForegroundColor White
    Write-Host "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: .\scripts\logs.ps1" -ForegroundColor White
    Write-Host ""
    Write-Host "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: DOCKER_README.md" -ForegroundColor White
    Write-Host "üîß –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: scripts\" -ForegroundColor White
    Write-Host ""
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
Main 