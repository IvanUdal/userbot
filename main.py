import asyncio
from telethon import TelegramClient
from telethon.events import NewMessage
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from config import API_ID, API_HASH, SESSION_NAME, CMD_PREFIX

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient(SESSION_NAME, API_ID, API_HASH)

@client.on(NewMessage(pattern=f'\\{CMD_PREFIX}ping'))
async def ping_handler(event):
    """–ö–æ–º–∞–Ω–¥–∞ .ping –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    await event.edit('üèì Pong!')

@client.on(NewMessage(pattern=f'\\{CMD_PREFIX}info'))
async def info_handler(event):
    """–ö–æ–º–∞–Ω–¥–∞ .info –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
    chat = await event.get_chat()
    sender = await event.get_sender()
    
    info_text = f"""
**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏–∏:**
üìä **–ß–∞—Ç:** {chat.title if hasattr(chat, 'title') else '–õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'}
üë§ **–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:** {sender.first_name if hasattr(sender, 'first_name') else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
üÜî **ID —á–∞—Ç–∞:** `{event.chat_id}`
üÜî **ID —Å–æ–æ–±—â–µ–Ω–∏—è:** `{event.id}`
    """
    
    await event.edit(info_text)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ userbot...")
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram
    await client.start()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ
    me = await client.get_me()
    print(f"‚úÖ Userbot –∑–∞–ø—É—â–µ–Ω –∫–∞–∫: {me.first_name} (@{me.username})")
    
    # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è
    print("üîÑ Userbot —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    await client.run_until_disconnected()

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë Userbot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
